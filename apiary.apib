FORMAT: 1A
HOST: https://dev.api.privetapp.ru/ar/v1/

# Privet AR

## Общее
- Все запросы должны идти через **HTTPS**
- Все данные отправляемые и получаемые имеют формат **JSON**, кроме GET/DELETE запросов, они отправляются как **URL Parameters**
- Тело ответа передается с `Content-Type: application/json`

## Аутентификация
Все запросы передаются с параметром сессии `sessionId`, полученной от приложения. Если сессия устарела, сервер возвращает объект `error` с HTTP статус кодом `401`

## Используемые методы
- **GET** — Получение ресурса или коллекции
- **POST** — Создание ресурса
- **PUT** — Модификация ресурса
- **DELETE** — Удаление ресурса

## Используемые коды состояния
### Успех
- **200 Success** — Все хорошо
- **201 Created** — Ресурс создан, в ответ на **POST**, в теле ответа содержится объект ресурса
- **204 No Content** — Не нужен ресурс в Body, например успешные операции **DELETE**
- **206 Partial Content** — Объектов в ответе меньше чем указано в запросе

### Ошибка клиента
- **400 Bad Request** — Неверные параметры запроса, с их описанием в объекте `error`>`parameters`
- **401 Unauthorized** — Сессия устарела, необходимо разлогиниться
- **403 Forbidden** — Запрещено делать запрос в данный момент, например попытка назначить встречу при уже активной
- **404 Not Found** — Ресурс не найден, при обращении клиента к несуществующему адресу ресурса, например попытка получить по ID уже удаленную встречу
- **409 Conflict** — Конфликт с текущим состоянием ресурса, например попытка подтвердить встречу отмененную другой стороной

### Ошибка сервера
- **500 Internal Server Error** — Внутренняя ошибка сервера
- **501 Not Implemented** — Такого метода не существует, на любой не описанный здесь запрос

## Ошибки
Ошибки отправляются на любой не `2xx` код состояния с объектом `error` в теле ответа

|              |             |                Пример                |    Тип     |Обязательный|               Описание               |
|--------------|-------------|:-------------------------------------|------------|:----------:|--------------------------------------|
|              |             |                                      |            |   **+**    |      Объект ошибки с описанием       |
|  *message*   |             |"Вы не можете назначить новую встречу"|  `string`  |   **+**    |          Короткий копирайт           |
|*description* |             |"Отмените предыдущую встречу"         |  `string`  |   **-**    |         Развернутый копирайт         |
|**parameters**|             |                                      |  `object`  |   **-**    |  Для отладки неправильных запросов   |
|              |    *key*    |"batches"                             |  `string`  |   **+**    | Неверный или отсутствующий параметр  |
|              |*description*|"Не может быть == 0"                  |  `string`  |   **-**    |     Опциональное описание ошибки     |

## Время
Везде где передается время — формат **ISO 8601 date-time** `YYYY-MM-DDTHH:MM:SSZ`.

# Group Радар

Группа методов оперирущих пользователями на радаре

## Пользователи [/targets]

Методы оперирующие на коллекции объектов `target`

Сервер самостоятельно определяет минимальное и максимальное расстояние от пользователя делающего запрос, для выборки объектов `target`

### Все пользователи [GET]

Метод отдает запрашиваемое количество людей в радиусе 360 градусов с равномерным распределением по градусам, и запасом для обновления.

При старте приложение делает запрос на этот метод. Последующие запросы делаются при нажатии на кнопку обновления.

#### Параметры запроса

|                  |                Пример                |    Тип     |Обязательный|               Описание               |
|------------------|:-------------------------------------|------------|:----------:|--------------------------------------|
|   *sessionId*    |"653527d9-d4e8-43d7-a8c1-5b28c04ad17b"|   `UUID`   |   **+**    |              ID сессии               |
|  *usersInBatch*  |40                                    |   `int`    |   **+**    |   Количество пользователей на 360    |
|    *batches*     |2                                     |   `int`    |   **+**    |     Количество массивов массивов     |
|*currentLatitude* |59.852806                             |   `frac`   |   **+**    |            Текущая широта            |
|*currentLongitude*|30.422884                             |   `frac`   |   **+**    |           Текущая долгота            |

#### Параметры ответа

##### `200 Success` Есть пользователи

В ответ приходит массив массивов объекта `target`. Количество вложенных массивов зависит от параметра `batches`

|                  |                  |                  |                Пример                |    Тип     |Обязательный|                     Описание                      |
|------------------|------------------|------------------|:-------------------------------------|------------|:----------:|---------------------------------------------------|
|   **targets**    |                  |                  |                                      |`[[object]]`|   **+**    |Массив массивов объекта `target`                   |
|                  |     *userId*     |                  |"5864aac4-069b-11e5-9941-757bb664a5dc"|   `UUID`   |   **+**    |Идентификатор пользователя                         |
|                  |      *name*      |                  |"Светлана"                            |  `string`  |   **+**    |Имя пользователя                                   |
|                  |    *birthday*    |                  |"1986-12-04T00:00:00.00Z"             | `ISO 8601` |   **-**    |День рождения пользователя                         |
|                  |     *status*     |                  |"appointment"                         |  `string`  |   **+**    |Статус пользователя                                |
|                  |                  |     `normal`     |                                      |            |            |Обычный пользователь                               |
|                  |                  |    `invited`     |                                      |            |            |Пользователь которому мы отправили приглашение     |
|                  |                  |    `inviter`     |                                      |            |            |Пользователь отправивший приглашение нам           |
|                  |                  |  `appointment`   |                                      |            |            |Пользователь с которым у нас подтвержденная встреча|
|                  | *appointmentId*  |                  |                                      |   `UUID`   |   **-**    |ID встречи                                         |
|                  |    **photo**     |                  |                                      |  `object`  |   **+**    |Фото пользователя с разными размерами              |
|                  |                  |    *preview*     |"photos/UUID/preview.jpg"             |  `string`  |   **+**    |URL квадратного фото размером 120х120              |
|                  |                  | *previewMedium*  |"photos/UUID/previewMedium.jpg"       |  `string`  |   **-**    |URL квадратного фото размером 180х180              |
|                  |                  |  *previewLarge*  |"photos/UUID/previewLarge.jpg"        |  `string`  |   **-**    |URL квадратного фото размером 240х240              |
|                  |   **location**   |                  |                                      |  `object`  |   **+**    |Месторасположение пользователя                     |
|                  |                  |    *latitude*    |59.852806                             |   `frac`   |   **+**    |Широта                                             |
|                  |                  |   *longitude*    |30.422884                             |   `frac`   |   **+**    |Долгота                                            |

##### `204 No Content` Нет пользователей рядом

В ответе отсутствует `body`, только статусный код `204`

##### `206 Partial Content` Пользователей меньше чем в запросе

В ответ приходит массив массивов объекта `target`, с максимально заполненными по параметру `batches` и `usersInBatch` массивами кроме последнего, в котором содержатся оставшиеся объекты

Если пользователей не хватает на целый массив `batches`, то он опускается

##### `400 Bad Request` Неверные параметры запроса

В ответе содержится объект `error` с вложенным объектом `parameters`

##### `401 Unauthorized` Сессия недействительна

В ответе содержится объект `error` с копирайтами для пользователя

Необходимо разлогиниться

##### `500 Internal Server Error` Ошибка сервера

В ответе содержится объект `error` с копирайтом ошибки для пользователя

+ Request

    + Attributes

        + sessionId: `653527d9-d4e8-43d7-a8c1-5b28c04ad17b` (string, required) - ID сессии
        + usersInBatch: `40` (number, required) - Количество пользователей на 360
        + batches: `2` (number, required) - Количество массивов массивов
        + currentLatitude: `59.852806` (number, required) - Текущая широта
        + currentLongitude: `30.422884` (number, required) - Текущая долгота

    + Body

            {
                "sessionId": "653527d9-d4e8-43d7-a8c1-5b28c04ad17b",
                "usersInBatch": 2,
                "batches": 2,
                "currentLatitude": 59.852806,
                "currentLongitude": 30.42288
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "definitions": {
                    "UUID": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
                    },
                    "natural": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "latitude": {
                        "type": "number",
                        "minimum": -90,
                        "maximum": 90
                    },
                    "longitude": {
                        "type": "number",
                        "minimum": -180,
                        "maximum": 180
                    }
                },
                "type": "object",
                "properties": {
                    "sessionId": {
                        "$ref": "#/definitions/UUID"
                    },
                    "usersInBatch": {
                        "$ref": "#/definitions/natural"
                    },
                    "batches": {
                        "$ref": "#/definitions/natural"
                    },
                    "currentLatitude": {
                        "$ref": "#/definitions/latitude"
                    },
                    "currentLongitude": {
                        "$ref": "#/definitions/longitude"
                    }
                },
                "additionalProperties": false,
                "required": [
                    "sessionId",
                    "usersInBatch",
                    "batches",
                    "currentLatitude",
                    "currentLongitude"
                ]
            }


+ Response 200 (application/json)

    + Body

            {
                "targets": [
                    [
                        {
                            "userId": "2a4b2528-069b-11e5-879b-757bb664a5dc",
                            "name": "Кристина",
                            "birthday": "1989-03-03T00:00:00.00Z",
                            "status": "normal",
                            "photo": {
                                "preview": "http://preview.jpg",
                                "previewMedium": "http://previewMedium.jpg",
                                "previewLarge": "http://previewLarge.jpg"
                            },
                            "location": {
                                "latitude": 59.882806,
                                "longitude": 30.45288
                            }
                        },
                        {
                            "userId": "463ec690-069b-11e5-88c0-757bb664a5dc",
                            "name": "Валерия",
                            "birthday": "1990-05-12T00:00:00.00Z",
                            "status": "invited",
                            "appointmentId": "7f76f4d2-06a0-11e5-82a6-01e861ea09be",
                            "photo": {
                                "preview": "http://preview.jpg",
                                "previewMedium": "http://previewMedium.jpg",
                                "previewLarge": "http://previewLarge.jpg"
                            },
                            "location": {
                                "latitude": 59.842806,
                                "longitude": 30.41288
                            }
                        }
                    ],
                    [
                        {
                            "userId": "5864aac4-069b-11e5-9941-757bb664a5dc",
                            "name": "Светлана",
                            "birthday": "1986-12-04T00:00:00.00Z",
                            "status": "inviter",
                            "appointmentId": "2b64f850-06a8-11e5-879b-757bb664a5dc",
                            "photo": {
                                "preview": "http://preview.jpg",
                                "previewMedium": "http://previewMedium.jpg",
                                "previewLarge": "http://previewLarge.jpg"
                            },
                            "location": {
                                "latitude": 59.872806,
                                "longitude": 30.43288
                            }
                        },
                        {
                            "userId": "7405130e-069b-11e5-8882-757bb664a5dc",
                            "name": "Мария",
                            "birthday": "1993-05-03T00:00:00.00Z",
                            "status": "appointment",
                            "appointmentId": "63386058-06cd-11e5-aee4-3c774b860ede",
                            "photo": {
                                "preview": "http://preview.jpg",
                                "previewMedium": "http://previewMedium.jpg",
                                "previewLarge": "http://previewLarge.jpg"
                            },
                            "location": {
                                "latitude": 59.892806,
                                "longitude": 30.45288
                            }
                        }
                    ]
                ]
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "definitions": {
                    "UUID": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
                    },
                    "URI": {
                        "type": "string",
                        "format": "uri"
                    },
                    "latitude": {
                        "type": "number",
                        "minimum": -90,
                        "maximum": 90
                    },
                    "longitude": {
                        "type": "number",
                        "minimum": -180,
                        "maximum": 180
                    },
                    "target": {
                        "type": "object",
                        "properties": {
                            "userId": {
                                "$ref": "#/definitions/UUID"
                            },
                            "name": {
                                "type": "string"
                            },
                            "birthday": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "normal",
                                    "invited",
                                    "inviter",
                                    "appointment"
                                ]
                            },
                            "appointmentId": {
                                "$ref": "#/definitions/UUID"
                            },
                            "photo": {
                                "type": "object",
                                "properties": {
                                    "preview": {
                                        "$ref": "#/definitions/URI"
                                    },
                                    "previewMedium": {
                                        "$ref": "#/definitions/URI"
                                    },
                                    "previewLarge": {
                                        "$ref": "#/definitions/URI"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "preview"
                                ]
                            },
                            "location": {
                                "type": "object",
                                "properties": {
                                    "latitude": {
                                        "$ref": "#/definitions/latitude"
                                    },
                                    "longitude": {
                                        "$ref": "#/definitions/longitude"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "latitude",
                                    "longitude"
                                ]
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "userId",
                            "name",
                            "status",
                            "photo",
                            "location"
                        ]
                    }
                },
                "type": "object",
                "properties": {
                    "targets": {
                        "type": "array",
                        "minItems": 1,
                        "uniqueItems": true,
                        "items": {
                            "type": "array",
                            "minItems": 1,
                            "uniqueItems": true,
                            "items": {
                                "$ref": "#/definitions/target"
                            }
                        }
                    }
                },
                "additionalProperties": false,
                "required": [
                    "targets"
                ]
            }


+ Response 204

+ Response 206 (application/json)

    + Body

            {
                "targets": [
                    [
                        {
                            "userId": "2a4b2528-069b-11e5-879b-757bb664a5dc",
                            "name": "Кристина",
                            "birthday": "1989-03-03T00:00:00.00Z",
                            "status": "normal",
                            "photo": {
                                "preview": "http://preview.jpg",
                                "previewMedium": "http://previewMedium.jpg",
                                "previewLarge": "http://previewLarge.jpg"
                            },
                            "location": {
                                "latitude": 59.882806,
                                "longitude": 30.45288
                            }
                        },
                        {
                            "userId": "463ec690-069b-11e5-88c0-757bb664a5dc",
                            "name": "Валерия",
                            "birthday": "1990-05-12T00:00:00.00Z",
                            "status": "invited",
                            "appointmentId": "7f76f4d2-06a0-11e5-82a6-01e861ea09be",
                            "photo": {
                                "preview": "http://preview.jpg",
                                "previewMedium": "http://previewMedium.jpg",
                                "previewLarge": "http://previewLarge.jpg"
                            },
                            "location": {
                                "latitude": 59.842806,
                                "longitude": 30.41288
                            }
                        }
                    ],
                    [
                        {
                            "userId": "5864aac4-069b-11e5-9941-757bb664a5dc",
                            "name": "Светлана",
                            "birthday": "1986-12-04T00:00:00.00Z",
                            "status": "inviter",
                            "appointmentId": "2b64f850-06a8-11e5-879b-757bb664a5dc",
                            "photo": {
                                "preview": "http://preview.jpg",
                                "previewMedium": "http://previewMedium.jpg",
                                "previewLarge": "http://previewLarge.jpg"
                            },
                            "location": {
                                "latitude": 59.872806,
                                "longitude": 30.43288
                            }
                        }
                    ]
                ]
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "definitions": {
                    "UUID": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
                    },
                    "URI": {
                        "type": "string",
                        "format": "uri"
                    },
                    "latitude": {
                        "type": "number",
                        "minimum": -90,
                        "maximum": 90
                    },
                    "longitude": {
                        "type": "number",
                        "minimum": -180,
                        "maximum": 180
                    },
                    "target": {
                        "type": "object",
                        "properties": {
                            "userId": {
                                "$ref": "#/definitions/UUID"
                            },
                            "name": {
                                "type": "string"
                            },
                            "birthday": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "normal",
                                    "invited",
                                    "inviter",
                                    "appointment"
                                ]
                            },
                            "appointmentId": {
                                "$ref": "#/definitions/UUID"
                            },
                            "photo": {
                                "type": "object",
                                "properties": {
                                    "preview": {
                                        "$ref": "#/definitions/URI"
                                    },
                                    "previewMedium": {
                                        "$ref": "#/definitions/URI"
                                    },
                                    "previewLarge": {
                                        "$ref": "#/definitions/URI"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "preview"
                                ]
                            },
                            "location": {
                                "type": "object",
                                "properties": {
                                    "latitude": {
                                        "$ref": "#/definitions/latitude"
                                    },
                                    "longitude": {
                                        "$ref": "#/definitions/longitude"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "latitude",
                                    "longitude"
                                ]
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "userId",
                            "name",
                            "status",
                            "photo",
                            "location"
                        ]
                    }
                },
                "type": "object",
                "properties": {
                    "targets": {
                        "type": "array",
                        "minItems": 1,
                        "uniqueItems": true,
                        "items": {
                            "type": "array",
                            "minItems": 1,
                            "uniqueItems": true,
                            "items": {
                                "$ref": "#/definitions/target"
                            }
                        }
                    }
                },
                "additionalProperties": false,
                "required": [
                    "targets"
                ]
            }

+ Response 400 (application/json)

    + Body

            {
                "error": {
                    "message": "Неверные поля запроса",
                    "parameters": {
                        "key": "sessionId",
                        "description": "Данные не соответствует формату UUID"
                    }
                }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "error": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "parameters": {
                                "type": "object",
                                "properties": {
                                    "key": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "key"
                                ]
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message"
                        ]
                    }
                },
                "additionalProperties": false,
                "required": [
                    "error"
                ]
            }

+ Response 401 (application/json)

    + Body

            {
                "error": {
                    "message": "Ваша сессия истекла",
                    "description": "Войдите в приложение заново"
                }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "error": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message"
                        ]
                    }
                },
                "additionalProperties": false,
                "required": [
                    "error"
                ]
            }


+ Response 500 (application/json)

    + Body

            {
                "error": {
                    "message": "Произошла ошибка",
                    "description": "Попробуйте снова"
                }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "error": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message"
                        ]
                    }
                },
                "additionalProperties": false,
                "required": [
                    "error"
                ]
            }

## Конкретный пользователь [/targets/{userId}]

Методы оперирующие с ID конкретного объекта `target`

+ Parameters

    + userId: `7405130e-069b-11e5-8882-757bb664a5dc` (string, required) - Идентификатор пользователя

### Конкретный пользователь [GET]

Возвращает конкретный объект `target` по указанному в URL `userId`

#### Параметры запроса

В URL запроса указывается `userId` необходимого объекта `target`

В теле запроса передается только сессия

|                  |                Пример                |    Тип     |Обязательный|               Описание               |
|------------------|:-------------------------------------|------------|:----------:|--------------------------------------|
|   *sessionId*    |"653527d9-d4e8-43d7-a8c1-5b28c04ad17b"|   `UUID`   |   **+**    |              ID сессии               |

#### Параметры ответа

##### `200 Success` Пользователь найден

В ответ приходит один объект `target` выбранного пользователя

|                  |                  |                Пример                |    Тип     |Обязательный|                     Описание                      |
|------------------|------------------|:-------------------------------------|------------|:----------:|---------------------------------------------------|
|     *userId*     |                  |"5864aac4-069b-11e5-9941-757bb664a5dc"|   `UUID`   |   **+**    |Идентификатор пользователя                         |
|      *name*      |                  |"Светлана"                            |  `string`  |   **+**    |Имя пользователя                                   |
|    *birthday*    |                  |"1986-12-04T00:00:00.00Z"             | `ISO 8601` |   **-**    |День рождения пользователя                         |
|     *status*     |                  |"appointment"                         |  `string`  |   **+**    |Статус пользователя                                |
|                  |     `normal`     |                                      |            |            |Обычный пользователь                               |
|                  |    `invited`     |                                      |            |            |Пользователь которому мы отправили приглашение     |
|                  |    `inviter`     |                                      |            |            |Пользователь отправивший приглашение нам           |
|                  |  `appointment`   |                                      |            |            |Пользователь с которым у нас подтвержденная встреча|
| *appointmentId*  |                  |                                      |   `UUID`   |   **-**    |ID встречи                                         |
|    **photo**     |                  |                                      |  `object`  |   **+**    |Фото пользователя с разными размерами              |
|                  |    *preview*     |"photos/UUID/preview.jpg"             |  `string`  |   **+**    |URL квадратного фото размером 120х120              |
|                  | *previewMedium*  |"photos/UUID/previewMedium.jpg"       |  `string`  |   **-**    |URL квадратного фото размером 180х180              |
|                  |  *previewLarge*  |"photos/UUID/previewLarge.jpg"        |  `string`  |   **-**    |URL квадратного фото размером 240х240              |
|   **location**   |                  |                                      |  `object`  |   **+**    |Месторасположение пользователя                     |
|                  |    *latitude*    |59.852806                             |   `frac`   |   **+**    |Широта                                             |
|                  |   *longitude*    |30.422884                             |   `frac`   |   **+**    |Долгота                                            |

##### `400 Bad Request` Неверные параметры запроса

В ответе содержится объект `error` с вложенным объектом `parameters`

##### `401 Unauthorized` Сессия недействительна

В ответе содержится объект `error` с копирайтами для пользователя

Необходимо разлогиниться

##### `404 Not Found` Пользователь с таким ID не найден

Тело ответа пустое

##### `500 Internal Server Error` Ошибка сервера

В ответе содержится объект `error` с копирайтом ошибки для пользователя

+ Request

    + Attributes

        + sessionId: `653527d9-d4e8-43d7-a8c1-5b28c04ad17b` (string, required) - ID сессии

    + Body

            {
                "sessionId": "653527d9-d4e8-43d7-a8c1-5b28c04ad17b"
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "definitions": {
                    "UUID": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
                    }
                },
                "type": "object",
                "properties": {
                    "sessionId": {
                        "$ref": "#/definitions/UUID"
                    }
                },
                "additionalProperties": false,
                "required": [
                    "sessionId"
                ]
            }

+ Response 200 (application/json)

    + Body

            {
                "target": {
                    "userId": "7405130e-069b-11e5-8882-757bb664a5dc",
                    "name": "Мария",
                    "birthday": "1993-05-03T00:00:00.00Z",
                    "status": "appointment",
                    "appointmentId": "63386058-06cd-11e5-aee4-3c774b860ede",
                    "photo": {
                        "preview": "http://preview.jpg",
                        "previewMedium": "http://previewMedium.jpg",
                        "previewLarge": "http://previewLarge.jpg"
                    },
                    "location": {
                        "latitude": 59.892806,
                        "longitude": 30.45288
                    }
                }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "definitions": {
                    "UUID": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
                    },
                    "URI": {
                        "type": "string",
                        "format": "uri"
                    },
                    "latitude": {
                        "type": "number",
                        "minimum": -90,
                        "maximum": 90
                    },
                    "longitude": {
                        "type": "number",
                        "minimum": -180,
                        "maximum": 180
                    }
                },
                "type": "object",
                "properties": {
                    "target": {
                        "type": "object",
                        "properties": {
                            "userId": {
                                "$ref": "#/definitions/UUID"
                            },
                            "name": {
                                "type": "string"
                            },
                            "birthday": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "normal",
                                    "invited",
                                    "inviter",
                                    "appointment"
                                ]
                            },
                            "appointmentId": {
                                "$ref": "#/definitions/UUID"
                            },
                            "photo": {
                                "type": "object",
                                "properties": {
                                    "preview": {
                                        "$ref": "#/definitions/URI"
                                    },
                                    "previewMedium": {
                                        "$ref": "#/definitions/URI"
                                    },
                                    "previewLarge": {
                                        "$ref": "#/definitions/URI"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "preview"
                                ]
                            },
                            "location": {
                                "type": "object",
                                "properties": {
                                    "latitude": {
                                        "$ref": "#/definitions/latitude"
                                    },
                                    "longitude": {
                                        "$ref": "#/definitions/longitude"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "latitude",
                                    "longitude"
                                ]
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "userId",
                            "name",
                            "status",
                            "photo",
                            "location"
                        ]
                    }
                },
                "additionalProperties": false,
                "required": [
                    "target"
                ]
            }

+ Response 400 (application/json)

    + Body

            {
                "error": {
                    "message": "Неверные поля запроса",
                    "parameters": {
                        "key": "sessionId",
                        "description": "Данные не соответствует формату UUID"
                    }
                }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "error": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "parameters": {
                                "type": "object",
                                "properties": {
                                    "key": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "key"
                                ]
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message"
                        ]
                    }
                },
                "additionalProperties": false,
                "required": [
                    "error"
                ]
            }

+ Response 401 (application/json)

    + Body

            {
                "error": {
                    "message": "Ваша сессия истекла",
                    "description": "Войдите в приложение заново"
                }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "error": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message"
                        ]
                    }
                },
                "additionalProperties": false,
                "required": [
                    "error"
                ]
            }

+ Response 404

+ Response 500 (application/json)

    + Body

            {
                "error": {
                    "message": "Произошла ошибка",
                    "description": "Попробуйте снова"
                }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "error": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message"
                        ]
                    }
                },
                "additionalProperties": false,
                "required": [
                    "error"
                ]
            }

# Group Места встречи

Группа методов оперирующих местами встречи

## Места встречи [/places]

Методы оперирующие на коллекции объектов `places`

### Все места встреч [GET]

Метод получения мест встречи

#### Параметры запроса

В запросе нет специфических параметров кроме сессии

|                  |                Пример                |    Тип     |Обязательный|               Описание               |
|------------------|:-------------------------------------|------------|:----------:|--------------------------------------|
|   *sessionId*    |"653527d9-d4e8-43d7-a8c1-5b28c04ad17b"|   `UUID`   |   **+**    |              ID сессии               |

#### Параметры ответа

##### Места встречи заданы

![Map](https://dl.dropboxusercontent.com/s/fpnj7eygi5i1icc/Map_annotated.png)

Получение масштаба отвязано от модели телефона, и определяется двумя параметрами, диаметром карты по меньшей стороне и ее центром.
Все телефоны таким образом будут отличаться своей большей стороной, координаты которой высчитаются из диаметра и аспект рейта телефона

|                  |                  |                  |                Пример                |    Тип     |Обязательный|               Описание               |
|------------------|------------------|------------------|:-------------------------------------|------------|:----------:|--------------------------------------|
|    **places**    |                  |                  |                                      | `[object]` |   **+**    |     Массив объектов типа `place`     |
|                  |    *placeId*     |                  |"544b3fd2-06c5-11e5-9762-d634eb8a2689"|   `UUID`   |   **+**    |           ID места встречи           |
|                  |      *name*      |                  |"A"                                   |  `string`  |   **+**    |        Название места встречи        |
|                  |   **location**   |                  |                                      |  `object`  |   **+**    |      Месторасположение встречи       |
|                  |                  |    *latitude*    |59.802800                             |   `frac`   |   **+**    |                Широта                |
|                  |                  |   *longitude*    |30.39246                              |   `frac`   |   **+**    |               Долгота                |
|    **scale**     |                  |                  |                                      |  `object`  |   **+**    |      Масштаб карты пользователя      |
|                  |    *diameter*    |                  |3548.02                               |   `frac`   |   **+**    |           Диаметр в метрах           |
|                  |    **center**    |                  |                                      |  `object`  |   **+**    |       Координаты центра карты        |
|                  |                  |    *latitude*    |59.802800                             |   `frac`   |   **+**    |                Широта                |
|                  |                  |   *longitude*    |30.39278                              |   `frac`   |   **+**    |               Долгота                |

##### `204 No Content` Места встречи не заданы

В ответе отсутствует `body`, только статусный код `204`

Невозможно назначать встречи

##### `400 Bad Request` Неверные параметры запроса

В ответе содержится объект `error` с вложенным объектом `parameters`

##### `401 Unauthorized` Сессия недействительна

В ответе содержится объект `error` с копирайтами для пользователя

Необходимо разлогиниться

##### `500 Internal Server Error` Ошибка сервера

В ответе содержится объект `error` с копирайтом ошибки для пользователя

+ Request

    + Attributes

        + sessionId: `653527d9-d4e8-43d7-a8c1-5b28c04ad17b` (string, required) - ID сессии

    + Body

            {
                "sessionId": "653527d9-d4e8-43d7-a8c1-5b28c04ad17b"
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "definitions": {
                    "UUID": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
                    }
                },
                "type": "object",
                "properties": {
                    "sessionId": {
                        "$ref": "#/definitions/UUID"
                    }
                },
                "additionalProperties": false,
                "required": [
                    "sessionId"
                ]
            }

+ Response 200 (application/json)

    + Body

            {
                "places": [
                    {
                        "placeId": "544b3fd2-06c5-11e5-9762-d634eb8a2689",
                        "name": "A",
                        "location": {
                            "latitude": 59.802800,
                            "longitude": 30.39246
                        }
                    },
                    {
                        "placeId": "90e0e65e-069d-11e5-8882-757bb664a5dc",
                        "name": "B",
                        "location": {
                            "latitude": 59.801850,
                            "longitude": 30.39274
                        }
                    },
                    {
                        "placeId": "167c6846-06d1-11e5-ae66-babbdd9da696",
                        "name": "C",
                        "location": {
                            "latitude": 59.832842,
                            "longitude": 30.32237
                        }
                    }
                ],
                "scale": {
                    "diameter": 3548.02,
                    "center": {
                        "latitude": 59.802800,
                        "longitude": 30.39278
                    }
                }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "definitions": {
                    "UUID": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
                    },
                    "latitude": {
                        "type": "number",
                        "minimum": -90,
                        "maximum": 90
                    },
                    "longitude": {
                        "type": "number",
                        "minimum": -180,
                        "maximum": 180
                    },
                    "place": {
                        "type": "object",
                        "properties": {
                            "placeId": {
                                "$ref": "#/definitions/UUID"
                            },
                            "name": {
                                "type": "string",
                                "pattern": "^[A-Z]$"
                            },
                            "location": {
                                "type": "object",
                                "properties": {
                                    "latitude": {
                                        "$ref": "#/definitions/latitude"
                                    },
                                    "longitude": {
                                        "$ref": "#/definitions/longitude"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "latitude",
                                    "longitude"
                                ]
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "placeId",
                            "name",
                            "location"
                        ]
                    }
                },
                "type": "object",
                "properties": {
                    "places": {
                        "type": "array",
                        "minItems": 1,
                        "uniqueItems": true,
                        "items": {
                            "$ref": "#/definitions/place"
                        }
                    },
                    "scale": {
                        "type": "object",
                        "properties": {
                            "diameter": {
                                "type": "number",
                                "minimum": 0,
                                "exclusiveMinimum": true
                            },
                            "center": {
                                "type": "object",
                                "properties": {
                                    "latitude": {
                                        "$ref": "#/definitions/latitude"
                                    },
                                    "longitude": {
                                        "$ref": "#/definitions/longitude"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "latitude",
                                    "longitude"
                                ]
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "diameter",
                            "center"
                        ]
                    }
                },
                "additionalProperties": false,
                "required": [
                    "places",
                    "scale"
                ]
            }

+ Response 204

+ Response 400 (application/json)

    + Body

            {
                "error": {
                    "message": "Неверные поля запроса",
                    "parameters": {
                        "key": "sessionId",
                        "description": "Данные не соответствует формату UUID"
                    }
                }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "error": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "parameters": {
                                "type": "object",
                                "properties": {
                                    "key": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "key"
                                ]
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message"
                        ]
                    }
                },
                "additionalProperties": false,
                "required": [
                    "error"
                ]
            }

+ Response 401 (application/json)

    + Body

            {
                "error": {
                    "message": "Ваша сессия истекла",
                    "description": "Войдите в приложение заново"
                }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "error": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message"
                        ]
                    }
                },
                "additionalProperties": false,
                "required": [
                    "error"
                ]
            }


+ Response 500 (application/json)

    + Body

            {
                "error": {
                    "message": "Произошла ошибка",
                    "description": "Попробуйте снова"
                }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "error": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message"
                        ]
                    }
                },
                "additionalProperties": false,
                "required": [
                    "error"
                ]
            }

# Group Давай встретимся

Группа методов для функционала «Давай встретимся»

## Встречи [/appointments]

Методы оперирующие на коллекции объектов `appointment`

### Все встречи [GET]

Возвращает все встречи связанные с пользователем

#### Параметры запроса

В запросе нет специфических параметров кроме сессии

|                  |                Пример                |    Тип     |Обязательный|               Описание               |
|------------------|:-------------------------------------|------------|:----------:|--------------------------------------|
|   *sessionId*    |"653527d9-d4e8-43d7-a8c1-5b28c04ad17b"|   `UUID`   |   **+**    |              ID сессии               |

#### Параметры ответа

##### `200 Success` Есть встречи

|                  |                  |                 |                Пример                |    Тип     |Обязательный|                Описание                |
|------------------|------------------|-----------------|:-------------------------------------|------------|:----------:|----------------------------------------|
| **appointments** |                  |                 |                                      | `[object]` |   **+**    |   Массив объектов типа `appointment`   |
|                  | *appointmentId*  |                 |"544b3fd2-06c5-11e5-9762-d634eb8a2689"|   `UUID`   |   **+**    |               ID встречи               |
|                  |     *status*     |                 |"made"                                |  `string`  |   **+**    |             Статус встречи             |
|                  |                  |     `made`      |                                      |            |            |         Приглашение на встречу         |
|                  |                  |   `accepted`    |                                      |            |            |    Приглашение подтвердили. Встреча    |
|                  |                  |   `declined`    |                                      |            |            |    Приглашение на встречу отклонили    |
|                  |                  |   `timeout`     |                                      |            |            |Приглашение отклонено по таймауту 5 мин.|
|                  |                  |     `kept`      |                                      |            |            |            «Мы встретились»            |
|                  |                  |    `broken`     |                                      |            |            |         От встречи отказались          |
|                  |     *userId*     |                 |"7405130e-069b-11e5-8882-757bb664a5dc"|   `UUID`   |   **+**    |            ID пользователя             |
|                  |    *placeId*     |                 |"167c6846-06d1-11e5-ae66-babbdd9da696"|   `UUID`   |   **+**    |            ID места встречи            |

##### `204 No Content` Еще нет ни одной встречи

В ответе отсутствует `body`, только статусный код `204`

##### `400 Bad Request` Неверные параметры запроса

В ответе содержится объект `error` с вложенным объектом `parameters`

##### `401 Unauthorized` Сессия недействительна

В ответе содержится объект `error` с копирайтами для пользователя

Необходимо разлогиниться

##### `500 Internal Server Error` Ошибка сервера

В ответе содержится объект `error` с копирайтом ошибки для пользователя

+ Request

    + Attributes

        + sessionId: `653527d9-d4e8-43d7-a8c1-5b28c04ad17b` (string, required) - ID сессии

    + Body

            {
                "sessionId": "653527d9-d4e8-43d7-a8c1-5b28c04ad17b"
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "definitions": {
                    "UUID": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
                    }
                },
                "type": "object",
                "properties": {
                    "sessionId": {
                        "$ref": "#/definitions/UUID"
                    }
                },
                "additionalProperties": false,
                "required": [
                    "sessionId"
                ]
            }

+ Response 200 (application/json)

    + Body

            {
                "appointments": [
                    {
                        "appointmentId": "63386058-06cd-11e5-aee4-3c774b860ede",
                        "status": "accepted",
                        "userId": "7405130e-069b-11e5-8882-757bb664a5dc",
                        "placeId": "167c6846-06d1-11e5-ae66-babbdd9da696"
                    },
                    {
                        "appointmentId": "7f76f4d2-06a0-11e5-82a6-01e861ea09be",
                        "status": "made",
                        "userId": "463ec690-069b-11e5-88c0-757bb664a5dc",
                        "placeId": "90e0e65e-069d-11e5-8882-757bb664a5dc"
                    },
                    {
                        "appointmentId": "2b64f850-06a8-11e5-879b-757bb664a5dc",
                        "status": "accepted",
                        "userId": "5864aac4-069b-11e5-9941-757bb664a5dc",
                        "placeId": "544b3fd2-06c5-11e5-9762-d634eb8a2689"
                    }
                ]
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "definitions": {
                    "UUID": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
                    }
                },
                "type": "object",
                "properties": {
                    "appointments": {
                        "type": "array",
                        "minItems": 1,
                        "uniqueItems": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "appointmentId": {
                                    "$ref": "#/definitions/UUID"
                                },
                                "status": {
                                    "type": "string",
                                    "enum": [
                                        "made",
                                        "accepted",
                                        "declined",
                                        "timeout",
                                        "kept",
                                        "broken"
                                    ]
                                },
                                "userId": {
                                    "$ref": "#/definitions/UUID"
                                },
                                "placeId": {
                                    "$ref": "#/definitions/UUID"
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "appointmentId",
                                "status",
                                "userId",
                                "placeId"
                            ]
                        }
                    }
                },
                "additionalProperties": false,
                "required": [
                    "appointments"
                ]
            }

+ Response 204

+ Response 400 (application/json)

    + Body

            {
                "error": {
                    "message": "Неверные поля запроса",
                    "parameters": {
                        "key": "sessionId",
                        "description": "Данные не соответствует формату UUID"
                    }
                }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "error": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "parameters": {
                                "type": "object",
                                "properties": {
                                    "key": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "key"
                                ]
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message"
                        ]
                    }
                },
                "additionalProperties": false,
                "required": [
                    "error"
                ]
            }

+ Response 401 (application/json)

    + Body

            {
                "error": {
                    "message": "Ваша сессия истекла",
                    "description": "Войдите в приложение заново"
                }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "error": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message"
                        ]
                    }
                },
                "additionalProperties": false,
                "required": [
                    "error"
                ]
            }


+ Response 500 (application/json)

    + Body

            {
                "error": {
                    "message": "Произошла ошибка",
                    "description": "Попробуйте снова"
                }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "error": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message"
                        ]
                    }
                },
                "additionalProperties": false,
                "required": [
                    "error"
                ]
            }

### Назначить встречу [POST]

Создает новую встречу с конкретным пользователем и местом встречи

#### Параметры запроса

|                  |                Пример                |    Тип     |Обязательный|               Описание               |
|------------------|:-------------------------------------|------------|:----------:|--------------------------------------|
|   *sessionId*    |"653527d9-d4e8-43d7-a8c1-5b28c04ad17b"|   `UUID`   |   **+**    |              ID сессии               |
|     *userId*     |"463ec690-069b-11e5-88c0-757bb664a5dc"|   `UUID`   |   **+**    |    ID приглашаемого пользователя     |
|    *placeId*     |"90e0e65e-069d-11e5-8882-757bb664a5dc"|   `UUID`   |   **+**    |           ID места встречи           |

#### Параметры ответа

##### `201 Created` Приглашение на встречу создано

В ответ проиходит созданный объект `appointment` со статусом `made`

|                  |                 |                Пример                |    Тип     |Обязательный|               Описание               |
|------------------|-----------------|:-------------------------------------|------------|:----------:|--------------------------------------|
| *appointmentId*  |                 |"544b3fd2-06c5-11e5-9762-d634eb8a2689"|   `UUID`   |   **+**    |              ID встречи              |
|     *status*     |                 |"made"                                |  `string`  |   **+**    |            Статус встречи            |
|                  |     `made`      |                                      |            |            |        Приглашение на встречу        |
|     *userId*     |                 |"7405130e-069b-11e5-8882-757bb664a5dc"|   `UUID`   |   **+**    |           ID пользователя            |
|    *placeId*     |                 |"167c6846-06d1-11e5-ae66-babbdd9da696"|   `UUID`   |   **+**    |           ID места встречи           |

##### `400 Bad Request` Неверные параметры запроса

В ответе содержится объект `error` с вложенным объектом `parameters`

##### `401 Unauthorized` Сессия недействительна

В ответе содержится объект `error` с копирайтами для пользователя

Необходимо разлогиниться

##### `403 Forbidden` Попытка назначить встречу при уже существующей

В ответ приходит объект `error` с копирайтом, например из прототипа:

|                  |                                                                                                                                                      |
|------------------|:-----------------------------------------------------------------------------------------------------------------------------------------------------|
|    *message*     |Вы не можете назначить новую встречу, пока не закончили текущую                                                                                       |
|  *description*   |Чтобы назначить новую встречу, завершите текущую или отмените ее. Если вашу встречу отменила вторая сторона, вы снова сможете назначать встречи.      |

##### `409 Conflict` Конфликтные ситуации

Подобные ситуации могут возникать, когда пользователь начал назначать встречу и выбирать место, но состояния других объектов изменились

В ответ приходит объект `error` с копирайтом ошибки для пользователя

Примеры конфликтов:
- Нажимаем на «Давай встретимся» и выбираем место встречи, а нам в это время тот же пользователь прислал приглашение на встречу
- Пользователь сделал Log Out пока мы назначали встречу
- Места встреч изменились

##### `500 Internal Server Error` Ошибка сервера

В ответе содержится объект `error` с копирайтом ошибки для пользователя

+ Request (application/json)

    + Attributes

        + sessionId: `653527d9-d4e8-43d7-a8c1-5b28c04ad17b` (string, required) - ID сессии
        + userId: `463ec690-069b-11e5-88c0-757bb664a5dc` (string, required) - ID пользователя
        + placeId: `90e0e65e-069d-11e5-8882-757bb664a5dc` (string, required) - ID места встречи

    + Body

            {
                "sessionId": "653527d9-d4e8-43d7-a8c1-5b28c04ad17b",
                "userId": "463ec690-069b-11e5-88c0-757bb664a5dc",
                "placeId": "90e0e65e-069d-11e5-8882-757bb664a5dc"
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "definitions": {
                    "UUID": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
                    }
                },
                "type": "object",
                "properties": {
                    "sessionId": {
                        "$ref": "#/definitions/UUID"
                    },
                    "userId": {
                        "$ref": "#/definitions/UUID"
                    },
                    "placeId": {
                        "$ref": "#/definitions/UUID"
                    }
                },
                "additionalProperties": false,
                "required": [
                    "sessionId",
                    "userId",
                    "placeId"
                ]
            }

+ Response 201 (application/json)

    + Body

            {
                "appointment": {
                    "appointmentId": "7f76f4d2-06a0-11e5-82a6-01e861ea09be",
                    "status": "made",
                    "userId": "463ec690-069b-11e5-88c0-757bb664a5dc",
                    "placeId": "90e0e65e-069d-11e5-8882-757bb664a5dc"
                }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "definitions": {
                    "UUID": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
                    }
                },
                "type": "object",
                "properties": {
                    "appointment": {
                        "type": "object",
                        "properties": {
                            "appointmentId": {
                                "$ref": "#/definitions/UUID"
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "made"
                                ]
                            },
                            "userId": {
                                "$ref": "#/definitions/UUID"
                            },
                            "placeId": {
                                "$ref": "#/definitions/UUID"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "appointmentId",
                            "status",
                            "userId",
                            "placeId"
                        ]
                    }
                },
                "additionalProperties": false,
                "required": [
                    "appointment"
                ]
            }

+ Response 400 (application/json)

    + Body

            {
                "error": {
                    "message": "Неверные поля запроса",
                    "parameters": {
                        "key": "sessionId",
                        "description": "Данные не соответствует формату UUID"
                    }
                }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "error": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "parameters": {
                                "type": "object",
                                "properties": {
                                    "key": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "key"
                                ]
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message"
                        ]
                    }
                },
                "additionalProperties": false,
                "required": [
                    "error"
                ]
            }

+ Response 401 (application/json)

    + Body

            {
                "error": {
                    "message": "Ваша сессия истекла",
                    "description": "Войдите в приложение заново"
                }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "error": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message"
                        ]
                    }
                },
                "additionalProperties": false,
                "required": [
                    "error"
                ]
            }

+ Response 403 (application/json)

    + Body

            {
                "error": {
                    "message": "Вы не можете назначить новую встречу, пока не закончили текущую",
                    "description": "Чтобы назначить новую встречу, завершите текущую или отмените ее. Если вашу встречу отменила вторая сторона, вы снова сможете назначать встречи."
                }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "error": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message"
                        ]
                    }
                },
                "additionalProperties": false,
                "required": [
                    "error"
                ]
            }

+ Response 409 (application/json)

    + Body

            {
                "error": {
                    "message": "Места встреч изменились",
                    "description": "Назначьте встречу в новом месте встречи"
                }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "error": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message"
                        ]
                    }
                },
                "additionalProperties": false,
                "required": [
                    "error"
                ]
            }

+ Response 500 (application/json)

    + Body

            {
                "error": {
                    "message": "Произошла ошибка",
                    "description": "Попробуйте снова"
                }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "error": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message"
                        ]
                    }
                },
                "additionalProperties": false,
                "required": [
                    "error"
                ]
            }

## Конкретная встреча [/appointments/{appointmentId}]

Методы оперирующие с ID конкретного объекта `appointment`

+ Parameters

    + appointmentId (UUID) - ID нужной встречи

### Конкретная встреча [GET]

Возвращает конкретный объект `appointment` по указанному в URL `appointmentId`

#### Параметры запроса

В URL запроса указывается `appointmentId` необходимого объекта `appointment`

В теле запроса передается только сессия

|                  |                Пример                |    Тип     |Обязательный|               Описание               |
|------------------|:-------------------------------------|------------|:----------:|--------------------------------------|
|   *sessionId*    |"653527d9-d4e8-43d7-a8c1-5b28c04ad17b"|   `UUID`   |   **+**    |              ID сессии               |

#### Параметры ответа

##### `200 Success` Встреча найдена

В ответ приходит один, указанный в URL объект `appointment`

|                  |                 |                Пример                |    Тип     |Обязательный|                Описание                |
|------------------|-----------------|:-------------------------------------|------------|:----------:|----------------------------------------|
| *appointmentId*  |                 |"544b3fd2-06c5-11e5-9762-d634eb8a2689"|   `UUID`   |   **+**    |               ID встречи               |
|     *status*     |                 |"made"                                |  `string`  |   **+**    |             Статус встречи             |
|                  |     `made`      |                                      |            |            |         Приглашение на встречу         |
|                  |   `accepted`    |                                      |            |            |    Приглашение подтвердили. Встреча    |
|                  |   `declined`    |                                      |            |            |    Приглашение на встречу отклонили    |
|                  |   `timeout`     |                                      |            |            |Приглашение отклонено по таймауту 5 мин.|
|                  |     `kept`      |                                      |            |            |            «Мы встретились»            |
|                  |    `broken`     |                                      |            |            |         От встречи отказались          |
|     *userId*     |                 |"7405130e-069b-11e5-8882-757bb664a5dc"|   `UUID`   |   **+**    |            ID пользователя             |
|    *placeId*     |                 |"167c6846-06d1-11e5-ae66-babbdd9da696"|   `UUID`   |   **+**    |            ID места встречи            |

##### `400 Bad Request` Неверные параметры запроса

В ответе содержится объект `error` с вложенным объектом `parameters`

##### `401 Unauthorized` Сессия недействительна

В ответе содержится объект `error` с копирайтами для пользователя

Необходимо разлогиниться

##### `404 Not Found` Встреча с таким ID не найдена

Тело ответа пустое

##### `500 Internal Server Error` Ошибка сервера

В ответе содержится объект `error` с копирайтом ошибки для пользователя

+ Request

    + Attributes

        + sessionId: `653527d9-d4e8-43d7-a8c1-5b28c04ad17b` (string, required) - ID сессии

    + Body

            {
                "sessionId": "653527d9-d4e8-43d7-a8c1-5b28c04ad17b"
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "definitions": {
                    "UUID": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
                    }
                },
                "type": "object",
                "properties": {
                    "sessionId": {
                        "$ref": "#/definitions/UUID"
                    }
                },
                "additionalProperties": false,
                "required": [
                    "sessionId"
                ]
            }

+ Response 200 (application/json)

    + Body

            {
                "appointment": {
                    "appointmentId": "7f76f4d2-06a0-11e5-82a6-01e861ea09be",
                    "status": "made",
                    "userId": "463ec690-069b-11e5-88c0-757bb664a5dc",
                    "placeId": "90e0e65e-069d-11e5-8882-757bb664a5dc"
                }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "definitions": {
                    "UUID": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
                    }
                },
                "type": "object",
                "properties": {
                    "appointment": {
                        "type": "object",
                        "properties": {
                            "appointmentId": {
                                "$ref": "#/definitions/UUID"
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "made"
                                ]
                            },
                            "userId": {
                                "$ref": "#/definitions/UUID"
                            },
                            "placeId": {
                                "$ref": "#/definitions/UUID"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "appointmentId",
                            "status",
                            "userId",
                            "placeId"
                        ]
                    }
                },
                "additionalProperties": false,
                "required": [
                    "appointment"
                ]
            }

+ Response 400 (application/json)

    + Body

            {
                "error": {
                    "message": "Неверные поля запроса",
                    "parameters": {
                        "key": "sessionId",
                        "description": "Данные не соответствует формату UUID"
                    }
                }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "error": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "parameters": {
                                "type": "object",
                                "properties": {
                                    "key": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "key"
                                ]
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message"
                        ]
                    }
                },
                "additionalProperties": false,
                "required": [
                    "error"
                ]
            }

+ Response 401 (application/json)

    + Body

            {
                "error": {
                    "message": "Ваша сессия истекла",
                    "description": "Войдите в приложение заново"
                }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "error": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message"
                        ]
                    }
                },
                "additionalProperties": false,
                "required": [
                    "error"
                ]
            }

+ Response 404

+ Response 500 (application/json)

    + Body

            {
                "error": {
                    "message": "Произошла ошибка",
                    "description": "Попробуйте снова"
                }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "error": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message"
                        ]
                    }
                },
                "additionalProperties": false,
                "required": [
                    "error"
                ]
            }

### Изменить статус встречи [PUT]

Позволяет изменить статус встречи с `made` на `accepted` или с `accepted` на `kept`

#### Параметры запроса

В URL запроса указывается `appointmentId` необходимого объекта `appointment`

В теле запроса передается сессия и необходимое значение статуса

|                  |                 |                Пример                |    Тип     |Обязательный|               Описание               |
|------------------|-----------------|:-------------------------------------|------------|:----------:|--------------------------------------|
|   *sessionId*    |                 |"653527d9-d4e8-43d7-a8c1-5b28c04ad17b"|   `UUID`   |   **+**    |              ID сессии               |
|     *status*     |                 |"accepted"                            |  `string`  |   **+**    |            Статус встречи            |
|                  |   `accepted`    |                                      |            |            |         Встреча подтверждена         |
|                  |     `kept`      |                                      |            |            |           «Мы встретились»           |


#### Параметры ответа

##### `200 Success` Статус встречи успешно изменен

В ответ приходит один, указанный в URL объект `appointment` с измененным статусом

|                  |                 |                Пример                |    Тип     |Обязательный|               Описание               |
|------------------|-----------------|:-------------------------------------|------------|:----------:|--------------------------------------|
| *appointmentId*  |                 |"544b3fd2-06c5-11e5-9762-d634eb8a2689"|   `UUID`   |   **+**    |              ID встречи              |
|     *status*     |                 |"accepted"                            |  `string`  |   **+**    |            Статус встречи            |
|                  |   `accepted`    |                                      |            |            |   Приглашение подтвердили. Встреча   |
|                  |     `kept`      |                                      |            |            |           «Мы встретились»           |
|     *userId*     |                 |"7405130e-069b-11e5-8882-757bb664a5dc"|   `UUID`   |   **+**    |           ID пользователя            |
|    *placeId*     |                 |"167c6846-06d1-11e5-ae66-babbdd9da696"|   `UUID`   |   **+**    |           ID места встречи           |

##### `400 Bad Request` Неверные параметры запроса

В ответе содержится объект `error` с вложенным объектом `parameters`

##### `401 Unauthorized` Сессия недействительна

В ответе содержится объект `error` с копирайтами для пользователя

Необходимо разлогиниться

##### `404 Not Found` Встреча с таким ID не найдена

Тело ответа пустое

##### `409 Conflict` Конфликтные ситуации

Подобные ситуации могут возникать, когда пользователь открыл экран для подтверждения встречи или «Мы встретились», но состояния других объектов изменились

В ответ приходит объект `error` с копирайтом ошибки для пользователя

Примеры конфликтов:
- Попытка изменить статус с `accepted` на `kept` когда другой пользователь уже отменил встречу
- Попытка изменить статус с `made` на `accepted` когда приглашение было отменено по таймауту 5 минут
- Пользователь сделал Log Out пока мы назначали встречу
- Места встреч изменились

При этом ситуация, при попытке изменить статус иначе, чем `made` -> `accepted` -> `kept` не является конфликтной, а ошибкой клиента `400 Bad Request`

##### `500 Internal Server Error` Ошибка сервера

В ответе содержится объект `error` с копирайтом ошибки для пользователя

+ Request

    + Attributes

        + sessionId: `653527d9-d4e8-43d7-a8c1-5b28c04ad17b` (string, required) - ID сессии
        + status: `accepted` (string, required) - Статус встречи

    + Body

            {
                "sessionId": "653527d9-d4e8-43d7-a8c1-5b28c04ad17b",
                "status": "accepted"
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "definitions": {
                    "UUID": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
                    }
                },
                "type": "object",
                "properties": {
                    "sessionId": {
                        "$ref": "#/definitions/UUID"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "accepted",
                            "kept"
                        ]
                    }
                },
                "additionalProperties": false,
                "required": [
                    "sessionId",
                    "status"
                ]
            }

+ Response 200 (application/json)

    + Body

            {
                "appointment": {
                    "appointmentId": "7f76f4d2-06a0-11e5-82a6-01e861ea09be",
                    "status": "made",
                    "userId": "463ec690-069b-11e5-88c0-757bb664a5dc",
                    "placeId": "90e0e65e-069d-11e5-8882-757bb664a5dc"
                }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "definitions": {
                    "UUID": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
                    }
                },
                "type": "object",
                "properties": {
                    "appointment": {
                        "type": "object",
                        "properties": {
                            "appointmentId": {
                                "$ref": "#/definitions/UUID"
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "made"
                                ]
                            },
                            "userId": {
                                "$ref": "#/definitions/UUID"
                            },
                            "placeId": {
                                "$ref": "#/definitions/UUID"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "appointmentId",
                            "status",
                            "userId",
                            "placeId"
                        ]
                    }
                },
                "additionalProperties": false,
                "required": [
                    "appointment"
                ]
            }

+ Response 200 (application/json)

        {
            "appointment": {
                "appointmentId": "2b64f850-06a8-11e5-879b-757bb664a5dc",
                "status": "accepted",
                "userId": "5864aac4-069b-11e5-9941-757bb664a5dc",
                "placeId": "544b3fd2-06c5-11e5-9762-d634eb8a2689"
            }
        }

+ Response 400 (application/json)

    + Body

            {
                "error": {
                    "message": "Неверные поля запроса",
                    "parameters": {
                        "key": "sessionId",
                        "description": "Данные не соответствует формату UUID"
                    }
                }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "error": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "parameters": {
                                "type": "object",
                                "properties": {
                                    "key": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "key"
                                ]
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message"
                        ]
                    }
                },
                "additionalProperties": false,
                "required": [
                    "error"
                ]
            }

+ Response 401 (application/json)

    + Body

            {
                "error": {
                    "message": "Ваша сессия истекла",
                    "description": "Войдите в приложение заново"
                }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "error": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message"
                        ]
                    }
                },
                "additionalProperties": false,
                "required": [
                    "error"
                ]
            }

+ Response 404

+ Response 409 (application/json)

    + Body

            {
                "error": {
                    "message": "Места встреч изменились",
                    "description": "Назначьте встречу в новом месте"
                }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "error": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message"
                        ]
                    }
                },
                "additionalProperties": false,
                "required": [
                    "error"
                ]
            }

+ Response 500 (application/json)

    + Body

            {
                "error": {
                    "message": "Произошла ошибка",
                    "description": "Попробуйте снова"
                }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "error": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message"
                        ]
                    }
                },
                "additionalProperties": false,
                "required": [
                    "error"
                ]
            }

### Отменить/Отклонить встречу [DELETE]

Позволяет отменить либо отклонить встречу, что изменит ее статус с `accepted` на `broken` либо с `made` на `declined`

После этого встрече нельзя изменить статус, нужно создавать новую

#### Параметры запроса

В URL запроса указывается `appointmentId` необходимого объекта `appointment`

В теле запроса передается только сессия

|                  |                Пример                |    Тип     |Обязательный|               Описание               |
|------------------|:-------------------------------------|------------|:----------:|--------------------------------------|
|   *sessionId*    |"653527d9-d4e8-43d7-a8c1-5b28c04ad17b"|   `UUID`   |   **+**    |              ID сессии               |

#### Параметры ответа

##### `204 No Content` Встреча успешно отменена/отклонена

В ответе отсутствует `body`, только статусный код `204`

##### `400 Bad Request` Неверные параметры запроса

В ответе содержится объект `error` с вложенным объектом `parameters`

##### `401 Unauthorized` Сессия недействительна

В ответе содержится объект `error` с копирайтами для пользователя

Необходимо разлогиниться

##### `404 Not Found` Встреча с таким ID не найдена

Тело ответа пустое

##### `409 Conflict` Конфликтные ситуации

Подобные ситуации могут возникать, когда пользователь открыл экран «Отклонить приглашение» или «Отменить встречу», но состояния других объектов изменились

В ответ приходит объект `error` с копирайтом ошибки для пользователя

Примеры конфликтов:
- Попытка отклонить приглашение, когда оно уже отклонено по `timeout`
- Попытка отменить встречу, когда ее уже отменили

+ Request

    + Attributes

        + sessionId: `653527d9-d4e8-43d7-a8c1-5b28c04ad17b` (string, required) - ID сессии

    + Body

            {
                "sessionId": "653527d9-d4e8-43d7-a8c1-5b28c04ad17b"
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "definitions": {
                    "UUID": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
                    }
                },
                "type": "object",
                "properties": {
                    "sessionId": {
                        "$ref": "#/definitions/UUID"
                    }
                },
                "additionalProperties": false,
                "required": [
                    "sessionId"
                ]
            }

+ Response 204

+ Response 400 (application/json)

    + Body

            {
                "error": {
                    "message": "Неверные поля запроса",
                    "parameters": {
                        "key": "sessionId",
                        "description": "Данные не соответствует формату UUID"
                    }
                }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "error": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "parameters": {
                                "type": "object",
                                "properties": {
                                    "key": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "key"
                                ]
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message"
                        ]
                    }
                },
                "additionalProperties": false,
                "required": [
                    "error"
                ]
            }

+ Response 401 (application/json)

    + Body

            {
                "error": {
                    "message": "Ваша сессия истекла",
                    "description": "Войдите в приложение заново"
                }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "error": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message"
                        ]
                    }
                },
                "additionalProperties": false,
                "required": [
                    "error"
                ]
            }

+ Response 404

+ Response 409 (application/json)

    + Body

            {
                "error": {
                    "message": "Места встреч изменились",
                    "description": "Назначьте встречу в новом месте"
                }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "error": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message"
                        ]
                    }
                },
                "additionalProperties": false,
                "required": [
                    "error"
                ]
            }

+ Response 500 (application/json)

    + Body

            {
                "error": {
                    "message": "Произошла ошибка",
                    "description": "Попробуйте снова"
                }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "error": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message"
                        ]
                    }
                },
                "additionalProperties": false,
                "required": [
                    "error"
                ]
            }

# Group Приложение — Модуль

Группа API для общения между приложением и модулем «Радар»

## Уведомления

Уведомления передаваемые сервером, через приложение в модуль, могут идти либо от Apple Push Notification Server либо напрямую

Основное поле, которое нужно передать с уведомлением это поле `appointmentId` в корне уведомления

Например уведомление, в случае передачи через APNS может выглядеть так:

```json
{
    "aps": {
        "alert": {
            "title": "Сабрина отменила встречу.",
            "body": "Вы все еще можете видеть друг друга на радаре."
        }
    },
    "appointmentId": "544b3fd2-06c5-11e5-9762-d634eb8a2689"
}
```

|                  |                  |                  |                Пример                |    Тип     |Обязательный|               Описание               |
|------------------|------------------|------------------|:-------------------------------------|------------|:----------:|--------------------------------------|
|     **aps**      |                  |                  |                                      |  `object`  |   **-**    |          Apple Push Server           |
|                  |    **alert**     |                  |                                      |  `object`  |   **-**    |     Основной объект уведомления      |
|                  |                  |     *title*      |"Сабрина отменила встречу."           |  `string`  |   **-**    |         Заголовок сообщения          |
|                  |                  |      *body*      |"Вы все еще можете видеть друг дру..."|  `string`  |   **-**    |              Сообщение               |
| *appointmentId*  |                  |                  |"544b3fd2-06c5-11e5-9762-d634eb8a2689"|   `UUID`   |   **+**    |              ID встречи              |

### Типы уведомлений

Копирайты уведомлений и их соответствие статусам объекта `appointment`:

|                  |      Статус      |                Заголовок                 |                                         Сообщение                                          |
|------------------|------------------|:-----------------------------------------|:-------------------------------------------------------------------------------------------|
| **Приглашающий** |     `broken`     |Сабрина отменила встречу.                 |Вы все еще можете видеть друг друга на радаре.                                              |
|                  |    `declined`    |Сабрина отклонила ваше приглашение.       |Вы не увидите другдруга на радаре.                                                          |
|                  |      `kept`      |Вы встретились.                           |Пройдите к одной из наших промо-будок и покажите этот экран нашей команде. Вас ждет подарок!|
|                  |    `accepted`    |Сабрина согласна на встречу!              |Вы можете посмотреть ее профиль, узнать место встречиили отменить встречу.                  |
|                  |    `timeout`     |Сабрина пропустила ваше приглашение.      |Вы можете видеть друг друга на радаре. Вы можете приглашать других людей.                   |
| **Приглашаемый** |      `made`      |Вероника пригласила вас на встречу.       |Вы можете посмотреть ее профиль, узнать место встречиили отклонить приглашение.             |
|                  |    `timeout`     |Вы не ответили на приглашение от Вероники.|Вы все еще можете видеть друг друга на радаре.                                              |
|                  |      `kept`      |Вы встретились.                           |Пройдите к одной из наших промо-будок и покажите этот экран нашей команде. Вас ждет подаро��!|
